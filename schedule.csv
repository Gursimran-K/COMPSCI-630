sequence,type,date,datevalue,topic,paper1,url1,author1,status1,paper2,url2,author2,status2,paper3,url3,author3,status3
1,class,9/3/2019,43711,introduction,,,,,,,,,,,,
2,class,9/5/2019,43713,compilers,The Education of a Computer,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/PL/p243-hopper.pdf,Hopper,read,The FORTRAN Automatic Coding System,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/PL/FORTRAN-102663113.05.01.acc.pdf,Backus,review,The Night Watch,http://scholar.harvard.edu/files/mickens/files/thenightwatch.pdf,Mickens,read
3,class,9/10/2019,43718,programming languages,Recursive Functions of Symbolic Expressions and Their Computation by Machine,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/PL/LISP.pdf,McCarthy,review,Algol-60 Translation,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/PL/Algol60-Dijkstra-MR35.PDF,Dijsktra,review,Go To Statement Considered Harmful,https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.pdf,Dijkstra,read
,noclass,9/12/2019,43720,,,,,,,,,,,,,
4,class,9/17/2019,43725,runtime systems,Garbage Collection in an Uncooperative Environment,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/PL/GC-Uncooperative.pdf,Boehm and Weiser,review,Quantifying the Performance of Garbage Collection vs. Explicit Memory Management,,Hertz & Berger,nextyear,,,,
,noclass,9/19/2019,43727,,,,,,,,,,,,,
5,class,9/24/2019,43732,computer architecture,Architecture of the IBM System/360,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Arch/Architecture-of-the-IBM-System-360.pdf,Amdahl et al.,review,Structural aspects of the System/360 Model 85: The cache,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Arch/liptay68.pdf,Liptay,read,Bringing the Web Up to Speed with WebAssembly,"https://people.mpi-sws.org/~rossberg/papers/Haas,%20Rossberg,%20Schuff,%20Titzer,%20Gohman,%20Wagner,%20Zakai,%20Bastien,%20Holman%20-%20Bringing%20the%20Web%20up%20to%20Speed%20with%20WebAssembly.pdf",Rossberg et al.,review
6,class,9/26/2019,43734,multicore and parallelism,Cramming More Components onto Integrated Circuits,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Arch/moorespaper.pdf,Moore,review,Validity of the Single Processor Approach to Achieving Large Scale Computing Capabilities,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Conc/Amdahl-04785615.pdf,Amdahl,review,Amdahlâ€™s Law in the Multicore Era,http://www.cs.wisc.edu/multifacet/papers/ieeecomputer08_amdahl_multicore.pdf,Hill,review
7,class,10/1/2019,43739,hardware/software interface,The Case for the Reduced Instruction Set Computer,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Arch/RISC-patterson.pdf,Patterson & Ditzel,review,Comments on the Case for RISC,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Arch/RISC-clark.pdf,Clark & Strecker,review,Available Instruction-Level Parallelism for Superscalar and Superpipelined Machines,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Arch/p272-jouppi.pdf,Jouppi,review
8,class,10/3/2019,43741,concurrency,Experience with Processes and Monitors in Mesa,http://www.cs.umass.edu/~emery/classes/cmpsci691st/readings/Conc/Mesa.pdf,Lampson & Redell ,review,,,,,,,,
9,class,10/8/2019,43746,OS design and internals,The Evolution of the UNIX Time-Sharing System,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/unix.pdf,Ritchie & Thompson,review,,,,,,,,
10,class,10/10/2019,43748,networked systems principles,Hints for Computer System Design,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/hints.pdf,Lampson,review,,,,,,,,
1,exam,10/16/2019,43754,Midterm,"ILC S140, 7:00pm-9:00pm",,,,,,,,,,,
11,class,10/17/2019,43755,security,A Note on the Confinement Problem,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/lampson73.pdf,Lampson,review,Spectre Attacks: Exploiting Speculative Execution,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/spectre.pdf,Many People,review,,,,
,noclass,10/22/2019,43760,,,,,,,,,,,,,
,noclass,10/24/2019,43762,,,,,,,,,,,,,
12,class,10/29/2019,43767,cryptography,A Method for Obtaining Digital Signatures and Public Key Cryptosystems,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/Rsapaper.pdf,RSA,review,,,,,,,,
13,class,10/31/2019,43769,fault-tolerance (hardware),A Case for Redundant Arrays of Inexpensive Disks (RAID),https://github.com/emeryberger/COMPSCI-630/raw/master/papers/RAID.pdf,"Patterson, Gibson & Katz",review,Why Do Computers Stop and What Can Be Done About It?,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/gray-85.pdf,Gray,review,,,,
14,class,11/5/2019,43774,fault-tolerance (software),"Enhancing Server Availability and Security Through
Failure-Oblivious Computing",https://github.com/emeryberger/COMPSCI-630/raw/master/papers/rinard.pdf,Rinard et al.,review,DieHard: Probabilistic Memory Safety for Unsafe Languages,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/fp014-berger.pdf,Berger and Zorn,review,,,,
15,class,11/7/2019,43776,performance analysis,GProf: A Call-Graph Execution Profiler,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/gprof.pdf,Graham et al.,review,Coz: Finding Code that Counts with Causal Profiling,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/coz.pdf,Curtsinger & Berger,review,,,,
16,class,11/12/2019,43781,static & dynamic analysis,A Few Billion Lines of Code Later: Using Static Analysis to Find Bugs in the Real World,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/coverity.pdf,Engler et al.,review,Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/valgrind.pdf,Nethercote & Seward,review,,,,
17,noclass,11/14/2019,43783,,,,,,,,,,,,,
18,class,11/19/2019,43788,testing,An empirical study of the reliability of UNIX utilities,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/fuzz.pdf,Miller et al.,review,DART: Directed Automated Random Testing,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/dart.pdf,Goderfroid et al.,review,,,,
19,class,11/21/2019,43790,distributed systems,Bitcoin: A Peer-to-Peer Electronic Cash System,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/bitcoin.pdf,Satoshi Nakamoto,review,,,,,,,,
20,class,12/3/2019,43802,distributed systems,In Search of an Understandable Consensus Algorithm,https://github.com/emeryberger/COMPSCI-630/raw/master/papers/raft.pdf,Ongaro and Ousterhout,review,,,,,,,,
21,class,12/5/2019,43804,catch-up,,,,,,,,,,,,
22,class,12/10/2019,43809,catch-up,,,,,,,,,,,,
2,exam,12/13/2019,43812,Final,"ILC S140, 1:00pm-3:00pm",,,,,,,,,,,
1,project-due,10/28/2019,43766,"Smash, A Compacting Memory Allocator",,https://docs.google.com/document/d/1ryGR0CU6r39Uv6s062ftf15Jy8yndlrAQoia86rypDk/edit?usp=sharing,,,,,,,,,,
2,project-due,12/8/2019,43807,"SnakeProf, A Space and Time Profiler for Python",,https://docs.google.com/document/d/1-bqe5SRXHi19vII_plXKIzp3urI-SgJLGQiQT1Is8Bo/edit?usp=sharing,,,,,,,,,,
,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,
,,,,performance analysis,"Roofline: An Insightful Visual Performance Model
for Floating-Point Programs and Multicore Architectures",,,,,,,,,,,